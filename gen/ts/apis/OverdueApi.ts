/* tslint:disable */
/* eslint-disable */
/**
 * Navigate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import {
  VesselOverdue,
  VesselOverdueFromJSON,
  VesselOverdueToJSON,
} from "../models";

export interface GetOverdueRequest {}

export class OverdueApi extends runtime.BaseAPI {
  /**
   * Get Overdue Information
   */
  async getOverdueRaw(
    requestParameters: GetOverdueRequest
  ): Promise<runtime.ApiResponse<VesselOverdue>> {
    const queryParameters: runtime.HTTPQuery = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.apiKey) {
      headerParameters["authorization"] = this.configuration.apiKey(
        "authorization"
      ); // apikey authentication
    }
    if (requestParameters["customerId"] !== undefined) {
      queryParameters["customer_id"] = requestParameters["customerId"];
    }

    const response = await this.request({
      path: `/overdue/`,
      method: "GET",
      headers: headerParameters,
      query: queryParameters,
    });

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      VesselOverdueFromJSON(jsonValue)
    );
  }

  /**
   * Get user information
   */
  async getOverdue(
    requestParameters: GetOverdueRequest
  ): Promise<VesselOverdue> {
    const response = await this.getOverdueRaw(requestParameters);
    return await response.value();
  }
}

/* tslint:disable */
/* eslint-disable */
/**
 * Navigate API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Audit
 */
export interface Audit {
  /**
   * Audit unique identifier.
   * @type {string}
   * @memberof Audit
   */
  readonly id?: string;
  /**
   *
   * @type {string}
   * @memberof Audit
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof Audit
   */
  notes: string;
  /**
   * Due date
   * @type {Date}
   * @memberof Audit
   */
  dueDate?: Date;
  /**
   *
   * @type {boolean}
   * @memberof Audit
   */
  readonly overdue?: boolean;
  /**
   * Due date
   * @type {Date}
   * @memberof Audit
   */
  completedDate?: Date;
  /**
   *
   * @type {string}
   * @memberof Audit
   */
  vesselId: string;
  /**
   *
   * @type {string}
   * @memberof Audit
   */
  readonly customerId?: string;
  /**
   *
   * @type {Date}
   * @memberof Audit
   */
  readonly created?: Date;
}

export function AuditFromJSON(json: any): Audit {
  return AuditFromJSONTyped(json, false);
}

export function AuditFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Audit {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    name: json["name"],
    notes: json["notes"],
    dueDate:
      !exists(json, "due_date") || !json["due_date"]
        ? undefined
        : new Date(json["due_date"]),
    overdue:
      !exists(json, "overdue") || !json["overdue"]
        ? undefined
        : json["overdue"],
    completedDate: !exists(json, "completed_date")
      ? undefined
      : new Date(json["completed_date"]),
    vesselId: json["vessel_id"],
    customerId: !exists(json, "customer_id") ? undefined : json["customer_id"],
    created: !exists(json, "created") ? undefined : new Date(json["created"]),
  };
}

export function AuditToJSON(value?: Audit | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    notes: !value.notes ? "" : value.notes,
    due_date: !value.dueDate ? "" : value.dueDate.toISOString(),
    completed_date: !value.completedDate
      ? ""
      : value.completedDate.toISOString(),
    vessel_id: value.vesselId,
  };
}
